// Estilos para el componente reutilizable 'card'.
// Utilizo anidaci√≥n (nesting) para mantener los estilos de la card organizados.
// Se aplican conceptos del Box Model (padding, border), Flexbox para el layout interno,
// y transformaciones/transiciones para los efectos hover.

.card { 
    background-color: $surface-color; 
    border-radius: 0.75rem; 
    border: 1px solid $border-color; 
    box-shadow: 0 4px 6px -1px rgba(0,0,0,0.07), 0 2px 4px -1px rgba(0,0,0,0.04); 
    overflow: hidden; 
    transition: transform 0.3s ease, box-shadow 0.3s ease; 
    display: flex; 
    flex-direction: column; 

    &:hover { 
        transform: translateY(-6px); 
        box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05); 
    }

    img { 
        width: 100%; 
        height: 220px; 
        object-fit: cover; 
        transition: transform 0.3s ease; 
    }

    &:hover img { 
        transform: scale(1.03); 
    }

    .card-content { 
        padding: 1.5rem; 
        flex-grow: 1; 
        display: flex; 
        flex-direction: column; 

        .description { 
            flex-grow: 1; 
            color: $text-color-light;
            margin-bottom: 1rem; 
            font-size: 0.9rem; 
            line-height: 1.5;
        }
    }

    .card-title { 
        font-size: 1.25rem; 
        font-weight: 600; 
        color: $primary-dark-color; // Usando una variable de color
        margin-bottom: 0.5rem; 
        
        @include respond-to(tablet) { 
            font-size: 1.5rem; 
        }
    }
}

.tag { 
    display: inline-block; 
    background-color: lighten($primary-color, 50%); 
    color: darken($primary-color, 10%); 
    padding: 0.35rem 0.85rem; 
    border-radius: 9999px; 
    font-size: 0.8rem; 
    font-weight: 500; 
    margin-right: 0.5rem; 
    margin-bottom: 0.5rem; 
}
